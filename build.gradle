/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */

plugins {
    // 依存ライブラリを含めたjarファイルを作成するためのプラグイン
    // "sh gradlew shadowJar"でビルドする
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8
jar.baseName = 'WebTest'
version = '0.1'

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.2-jre'

    // Use JUnit test framework
    testImplementation 'org.junit.jupiter:junit-jupiter:5.5.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.7.2'

    // Selenium
    implementation 'org.seleniumhq.selenium:selenium-java:3.141.59'
    implementation 'io.github.bonigarcia:webdrivermanager:5.2.1'
}

/*
test {
    // JUnit platform を使う設定
    useJUnitPlatform()

    testLogging {
        // テスト時の標準出力と標準エラー出力を表示する
        showStandardStreams true
        // イベントを出力する (TestLogEvent)
        events 'started', 'skipped', 'passed', 'failed'
        // 例外発生時の出力設定 (TestExceptionFormat)
        exceptionFormat 'full'
    }
}
*/

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
        attributes 'Main-Class' : 'webtest.WebTest'
    }
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    //with jar
}

